############################################################################
# This file is part of LImA, a Library for Image Acquisition
#
# Copyright (C) : 2009-2011
# European Synchrotron Radiation Facility
# BP 220, Grenoble 38043
# FRANCE
#
# This is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This software is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, see <http://www.gnu.org/licenses/>.
############################################################################

include ../config.inc


############################
# HELPER MACROS
############################

full-version	= $(shell cat $(1))
minor-version	= $(shell echo $(call full-version,$(1)) | cut -f1-2 -d.)
ifneq ($(LINK_STRICT_VERSION),0)
link-version	= $(call full-version,$(1))
else
link-version	= $(call minor-version,$(1))
endif

lib-base        = liblima$(1).so
lib-full        = $(call lib-base,$(1)).$(call full-version,$(2))
lib-minor       = $(call lib-base,$(1)).$(call minor-version,$(2))
lib-link	= $(call lib-base,$(1)).$(call link-version,$(2))
lib-flags	= -fPIC -Wl,-soname,$(call lib-link,$(1),$(2))

# 1=name, 2=ver-file 3=flags 4=deps, 5=target, 6=objs
compile-lib	= \
	$(CXX) -shared -o $(5) $(3) $(call lib-flags,$(1),$(2)) $(6) $(4)

create-links	= \
	rm -f $(call lib-minor,$(1),$(2)) && \
	rm -f $(call lib-base,$(1),$(2)) && \
	ln -s $(call lib-full,$(1),$(2))  $(call lib-minor,$(1),$(2)) && \
	ln -s $(call lib-minor,$(1),$(2)) $(call lib-base,$(1),$(2))


############################
# LIMA - CORE
############################

CORE_LDFLAGS	:= -L../third-party/Processlib/build -Wl,-rpath=$(shell pwd)/../third-party/Processlib/build
CORE_LDLIBS	:= -lprocesslib -lrt

ifneq ($(COMPILE_CBF_SAVING),0)
CORE_LDFLAGS += -L../third-party/CBFLib/lib
CORE_LDLIBS += -lcbf
endif

ifneq ($(COMPILE_FITS_SAVING),0)
CORE_LDFLAGS += -L../third-party/cfitsio/lib -L../third-party/CCfits/.libs
CORE_LDLIBS +=  -Wl,-rpath=$(shell pwd)/../third-party/CCfits/.libs  -lCCfits \
                -Wl,-rpath=$(shell pwd)/../third-party/cfitsio/lib -lcfitsio
endif

ifneq ($(COMPILE_EDFGZ_SAVING),0)
CORE_LDLIBS += -lz
endif

ifneq ($(COMPILE_EDFLZ4_SAVING),0)
CORE_LDLIBS += -llz4
endif

ifneq ($(COMPILE_TIFF_SAVING),0)
CORE_LDLIBS += -ltiff
endif

ifneq ($(COMPILE_HDF5_SAVING),0)
PROCESSOR_TYPE := $(shell uname -m)
CORE_LDFLAGS += -L../third-party/hdf5/src/.libs -Wl,-rpath=$(shell pwd)/../third-party/hdf5/src/.libs
CORE_LDFLAGS += -L../third-party/hdf5/c++/src/.libs -Wl,-rpath=$(shell pwd)/../third-party/hdf5/c++/src/.libs
CORE_LDLIBS += -lhdf5_cpp -lhdf5
endif

ifneq ($(COMPILE_CONFIG),0)
CORE_LDLIBS += -L../third-party/libconfig/lib/.libs -Wl,-rpath=$(shell pwd)/../third-party/libconfig/lib/.libs  -lconfig++
endif

ifneq ($(COMPILE_CORE),0)

core-name	:= core
core-objs	:= ../common/src/Common.o \
		   ../hardware/src/Hw.o \
		   ../control/src/Ct.o
core-ver	:= ../common/VERSION
core-flags	:= $(CORE_LDFLAGS)
core-deps	:= $(CORE_LDLIBS)

$(call lib-full,$(core-name),$(core-ver)): $(core-objs)
	$(call compile-lib,$(core-name),$(core-ver),\
			   $(core-flags),$(core-deps),$@,$+)
	$(call create-links,$(core-name),$(core-ver))

build_targets	:= $(call lib-full,$(core-name),$(core-ver))

endif

LDFLAGS		:= $(CORE_LDFLAGS) -L.
LDLIBS		:= $(CORE_LDLIBS) -llimacore


############################
# LIMA - SIMULATOR
############################

ifneq ($(COMPILE_SIMULATOR),0)

simu-name	:= simulator
simu-objs	:= ../camera/simulator/src/Simu.o
simu-ver	:= ../camera/simulator/VERSION
simu-flags	:= $(LDFLAGS)
simu-deps	:= $(LDLIBS)

$(call lib-full,$(simu-name),$(simu-ver)): $(simu-objs)
	$(call compile-lib,$(simu-name),$(simu-ver),\
			   $(simu-flags),$(simu-deps),$@,$+)
	$(call create-links,$(simu-name),$(simu-ver))

build_targets	+= $(call lib-full,$(simu-name),$(simu-ver))

endif


############################
# LIMA - ESPIA
############################


ifneq ($(COMPILE_ESPIA),0)

include ../camera/common/espia/include/espia.inc
ESPIA_LDFLAGS	:= $(LDFLAGS) -L$(ESPIA_DRV_LIB)
ESPIA_LDLIBS	:= $(LDLIBS) -lespia

espia-name	:= espia
espia-objs	:= ../camera/common/espia/src/Espia.o
espia-ver	:= ../camera/common/espia/VERSION
espia-flags	:= $(ESPIA_LDFLAGS)
espia-deps	:= $(ESPIA_LDLIBS)

$(call lib-full,$(espia-name),$(espia-ver)): $(espia-objs)
	$(call compile-lib,$(espia-name),$(espia-ver),\
			   $(espia-flags),$(espia-deps),$@,$+)
	$(call create-links,$(espia-name),$(espia-ver))

build_targets	+= $(call lib-full,$(espia-name),$(espia-ver))

endif


############################
# LIMA - FRELON
############################

ifneq ($(COMPILE_FRELON),0)

FRELON_LDFLAGS	:= $(ESPIA_LDFLAGS) -L.
FRELON_LDLIBS	:= $(ESPIA_LDLIBS) -llimaespia

frelon-name	:= frelon
frelon-objs	:= ../camera/frelon/src/Frelon.o
frelon-ver	:= ../camera/frelon/VERSION
frelon-flags	:= $(FRELON_LDFLAGS)
frelon-deps	:= $(FRELON_LDLIBS)

$(call lib-full,$(frelon-name),$(frelon-ver)): $(frelon-objs)
	$(call compile-lib,$(frelon-name),$(frelon-ver),\
			   $(frelon-flags),$(frelon-deps),$@,$+)
	$(call create-links,$(frelon-name),$(frelon-ver))

build_targets	+= $(call lib-full,$(frelon-name),$(frelon-ver))

endif


############################
# LIMA - MAXIPIX
############################

ifneq ($(COMPILE_MAXIPIX),0)

MAXIPIX_LDFLAGS	:= $(ESPIA_LDFLAGS) -L. -g
MAXIPIX_LDLIBS	:= $(ESPIA_LDLIBS) -llimaespia 

maxipix-name	:= maxipix
maxipix-objs	:= ../camera/maxipix/src/Maxipix.o
maxipix-ver	:= ../camera/maxipix/VERSION
maxipix-flags	:= $(MAXIPIX_LDFLAGS)
maxipix-deps	:= $(MAXIPIX_LDLIBS)

$(call lib-full,$(maxipix-name),$(maxipix-ver)): $(maxipix-objs)
	$(call compile-lib,$(maxipix-name),$(maxipix-ver),\
			   $(maxipix-flags),$(maxipix-deps),$@,$+)
	$(call create-links,$(maxipix-name),$(maxipix-ver))

build_targets	+= $(call lib-full,$(maxipix-name),$(maxipix-ver))

endif

############################
# LIMA - BASLER
############################

ifneq ($(COMPILE_BASLER),0)

ifndef PYLON_ROOT
PYLON_ROOT	:= /opt/pylon
endif

PYLON_CONFIG    := $(PYLON_ROOT)/bin/pylon-config

ifeq ("$(wildcard $(PYLON_CONFIG))", "")
BASLER_LDFLAGS	:= $(LDFLAGS) -L. -L$(PYLON_ROOT)/lib -L$(PYLON_ROOT)/lib64
BASLER_LDLIBS	:= $(LDLIBS) -lpylonbase
else
BASLER_LDFLAGS  := $(LDFLAGS) $(shell $(PYLON_CONFIG) --libs-only-L)
BASLER_LDLIBS   := $(LDLIBS) $(shell $(PYLON_CONFIG) --libs-only-l)
endif

basler-name	:= basler
basler-objs	:= ../camera/basler/src/Basler.o
basler-ver	:= ../camera/basler/VERSION
basler-flags	:= $(BASLER_LDFLAGS)
basler-deps	:= $(BASLER_LDLIBS)

$(call lib-full,$(basler-name),$(basler-ver)): $(basler-objs)
	$(call compile-lib,$(basler-name),$(basler-ver),\
			   $(basler-flags),$(basler-deps),$@,$+)
	$(call create-links,$(basler-name),$(basler-ver))

build_targets	+= $(call lib-full,$(basler-name),$(basler-ver))

endif

############################
# LIMA - UEYE
############################

ifneq ($(COMPILE_UEYE),0)

UEYE_LDFLAGS	:= $(LDFLAGS)
UEYE_LDLIBS	:= $(LDLIBS) -lueye_api

ueye-name	:= ueye
ueye-objs	:= ../camera/ueye/src/Ueye.o
ueye-ver	:= ../camera/ueye/VERSION
ueye-flags	:= $(UEYE_LDFLAGS)
ueye-deps	:= $(UEYE_LDLIBS)

$(call lib-full,$(ueye-name),$(ueye-ver)): $(ueye-objs)
	$(call compile-lib,$(ueye-name),$(ueye-ver),\
			   $(ueye-flags),$(ueye-deps),$@,$+)
	$(call create-links,$(ueye-name),$(ueye-ver))

build_targets	+= $(call lib-full,$(ueye-name),$(ueye-ver))

endif

############################
# LIMA - PROSILICA
############################

ifneq ($(COMPILE_PROSILICA),0)

PROCESSOR_TYPE := $(shell uname -i)
ifeq ($(PROCESSOR_TYPE),i386)
PROSILICA_LDFLAGS	:= -L. -L../camera/prosilica/sdk/bin/x86
else
PROSILICA_LDFLAGS	:= -L. -L../camera/prosilica/sdk/bin/x64 \
			   -L../camera/prosilica/sdk/bin/x86
endif
PROSILICA_LDLIBS	:= -lPvAPI

prosilica-name	:= prosilica
prosilica-objs	:= ../camera/prosilica/src/Prosilica.o
prosilica-ver	:= ../camera/prosilica/VERSION
prosilica-flags	:= $(LDFLAGS) $(PROSILICA_LDFLAGS)
prosilica-deps	:= $(LDLIBS) $(PROSILICA_LDLIBS)

$(call lib-full,$(prosilica-name),$(prosilica-ver)): $(prosilica-objs)
	$(call compile-lib,$(prosilica-name),$(prosilica-ver),\
			   $(prosilica-flags),$(prosilica-deps),$@,$+)
	$(call create-links,$(prosilica-name),$(prosilica-ver))

build_targets	+= $(call lib-full,$(prosilica-name),$(prosilica-ver))

endif


############################
# LIMA - ROPERSCIENTIFIC
############################

ifneq ($(COMPILE_ROPERSCIENTIFIC),0)

ROPERSCIENTIFIC_LDLIBS	:= $(LDLIBS) -lpvcam -lraw1394

ropersci-name	:= roperscientific
ropersci-objs	:= ../camera/roperscientific/src/RoperScientific.o
ropersci-ver	:= ../camera/roperscientific/VERSION
ropersci-flags	:= $(LDFLAGS)
ropersci-deps	:= $(ROPERSCIENTIFIC_LDLIBS)

$(call lib-full,$(ropersci-name),$(ropersci-ver)): $(ropersci-objs)
	$(call compile-lib,$(ropersci-name),$(ropersci-ver),\
			   $(ropersci-flags),$(ropersci-deps),$@,$+)
	$(call create-links,$(ropersci-name),$(ropersci-ver))

build_targets	+= $(call lib-full,$(ropersci-name),$(ropersci-ver))

endif


############################
# LIMA - ADSC
############################

ifneq ($(COMPILE_ADSC),0)

ADSC_LDFLAGS	:= $(LDFLAGS) -L. -L../camera/adsc/sdk/adsc_sources/lib/linux
ADSC_LDLIBS	:= $(LDLIBS) -lauxlib -ldetcon_th

adsc-name	:= adsc
adsc-objs	:= ../camera/adsc/src/Adsc.o
adsc-ver	:= ../camera/adsc/VERSION
adsc-flags	:= $(ADSC_LDFLAGS)
adsc-deps	:= $(ADSC_LDLIBS)

$(call lib-full,$(adsc-name),$(adsc-ver)): $(adsc-objs)
	$(call compile-lib,$(adsc-name),$(adsc-ver),\
			   $(adsc-flags),$(adsc-deps),$@,$+)
	$(call create-links,$(adsc-name),$(adsc-ver))

build_targets	+= $(call lib-full,$(adsc-name),$(adsc-ver))

endif

############################
# LIMA - MERLIN
############################
ifneq ($(COMPILE_MERLIN),0)

MERLIN_LDFLAGS	:= $(LDFLAGS)
MERLIN_LDLIBS	:= $(LDLIBS)

merlin-name	:= merlin
merlin-objs	:= ../camera/merlin/src/Merlin.o
merlin-ver	:= ../camera/merlin/VERSION
merlin-flags	:= $(MERLIN_LDFLAGS)
merlin-deps	:= $(MERLIN_LDLIBS)

$(call lib-full,$(merlin-name),$(merlin-ver)): $(merlin-objs)
	$(call compile-lib,$(merlin-name),$(merlin-ver),\
			   $(merlin-flags),$(merlin-deps),$@,$+)
	$(call create-links,$(merlin-name),$(merlin-ver))

build_targets	+= $(call lib-full,$(merlin-name),$(merlin-ver))

endif

############################
# LIMA - MYTHEN
############################

ifneq ($(COMPILE_MYTHEN),0)

MYTHEN_LDLIBS	:= $(LDLIBS) -lSlsDetector

mythen-name	:= mythen
mythen-objs	:= ../camera/mythen/src/Mythen.o
mythen-ver	:= ../camera/mythen/VERSION
mythen-flags	:= $(LDFLAGS)
mythen-deps	:= $(MYTHEN_LDLIBS)

$(call lib-full,$(mythen-name),$(mythen-ver)): $(mythen-objs)
	$(call compile-lib,$(mythen-name),$(mythen-ver),\
			   $(mythen-flags),$(mythen-deps),$@,$+)
	$(call create-links,$(mythen-name),$(mythen-ver))

build_targets	+= $(call lib-full,$(mythen-name),$(mythen-ver))

endif

############################
# LIMA - MYTHEN3
############################

ifneq ($(COMPILE_MYTHEN3),0)

MYTHEN3_LDLIBS	:= $(LDLIBS)

mythen3-name	:= mythen3
mythen3-objs	:= ../camera/mythen3/src/Mythen3.o
mythen3-ver	:= ../camera/mythen3/VERSION
mythen3-flags	:= $(LDFLAGS)
mythen3-deps	:= $(MYTHEN3_LDLIBS)

$(call lib-full,$(mythen3-name),$(mythen3-ver)): $(mythen3-objs)
	$(call compile-lib,$(mythen3-name),$(mythen3-ver),\
			   $(mythen3-flags),$(mythen3-deps),$@,$+)
	$(call create-links,$(mythen3-name),$(mythen3-ver))

build_targets	+= $(call lib-full,$(mythen3-name),$(mythen3-ver))

endif

############################
# LIMA - ANDOR
############################

ifneq ($(COMPILE_ANDOR),0)

ANDOR_LDFLAGS	:= $(LDFLAGS) -L. -L/usr/local/lib
ANDOR_LDLIBS	:= $(LDLIBS) -landor

andor-name	:= andor
andor-objs	:= ../camera/andor/src/Andor.o
andor-ver	:= ../camera/andor/VERSION
andor-flags	:= $(ANDOR_LDFLAGS)
andor-deps	:= $(ANDOR_LDLIBS)

$(call lib-full,$(andor-name),$(andor-ver)): $(andor-objs)
	$(call compile-lib,$(andor-name),$(andor-ver),\
			   $(andor-flags),$(andor-deps),$@,$+)
	$(call create-links,$(andor-name),$(andor-ver))

build_targets	+= $(call lib-full,$(andor-name),$(andor-ver))

endif

############################
# LIMA - ANDOR3
############################

ifneq ($(COMPILE_ANDOR3),0)

ANDOR3_LDFLAGS	:= $(LDFLAGS) -L. -L/usr/local/lib
ANDOR3_LDLIBS	:= $(LDLIBS) -latcore -latutility

andor3-name	:= andor3
andor3-objs	:= ../camera/andor3/src/Andor3.o
andor3-ver	:= ../camera/andor3/VERSION
andor3-flags	:= $(ANDOR3_LDFLAGS)
andor3-deps	:= $(ANDOR3_LDLIBS)

$(call lib-full,$(andor3-name),$(andor3-ver)): $(andor3-objs)
	$(call compile-lib,$(andor3-name),$(andor3-ver),\
			   $(andor3-flags),$(andor3-deps),$@,$+)
	$(call create-links,$(andor3-name),$(andor3-ver))

build_targets	+= $(call lib-full,$(andor3-name),$(andor3-ver))

endif

############################
# LIMA - MARCCD
############################

ifneq ($(COMPILE_MARCCD),0)

MARCCD_LDFLAGS	:= $(LDFLAGS) -L. -L../third-party/yat/src/.libs
MARCCD_LDLIBS	:= $(LDLIBS) -lyat -lrt

marccd-name	:= marccd
marccd-objs	:= ../camera/marccd/src/Marccd.o
marccd-ver	:= ../camera/marccd/VERSION
marccd-flags	:= $(MARCCD_LDFLAGS)
marccd-deps	:= $(MARCCD_LDLIBS)

$(call lib-full,$(marccd-name),$(marccd-ver)): $(marccd-objs)
	$(call compile-lib,$(marccd-name),$(marccd-ver),\
			   $(marccd-flags),$(marccd-deps),$@,$+)
	$(call create-links,$(marccd-name),$(marccd-ver))

build_targets	+= $(call lib-full,$(marccd-name),$(marccd-ver))

endif


############################
# LIMA - XH
############################

ifneq ($(COMPILE_XH),0)

XH_LDLIBS	:= 

xh-name	:= xh
xh-objs	:= ../camera/xh/src/Xh.o
xh-ver	:= ../camera/xh/VERSION
xh-flags	:= $(LDFLAGS)
xh-deps	:= $(XH_LDLIBS)

$(call lib-full,$(xh-name),$(xh-ver)): $(xh-objs)
	$(call compile-lib,$(xh-name),$(xh-ver),\
			   $(xh-flags),$(xh-deps),$@,$+)
	$(call create-links,$(xh-name),$(xh-ver))

build_targets	+= $(call lib-full,$(xh-name),$(xh-ver))

endif

############################
# LIMA - XSPRESS3
############################

ifneq ($(COMPILE_XSPRESS3),0)

PROCESSOR_TYPE := $(shell uname -m)
ifeq ($(PROCESSOR_TYPE),x86_64)
XSPRESS3_LDFLAGS	:= -L../camera/xspress3/sdk/libs/linux.x86_64
else
XSPRESS3_LDFLAGS	:= -L../camera/xspress3/sdk/libs/linux.x86
endif
XSPRESS3_LDLIBS	:= -lxspress3 -limg_mod

xspress3-name	:= xspress3
xspress3-objs	:= ../camera/xspress3/src/Xspress3.o
xspress3-ver	:= ../camera/xspress3/VERSION
xspress3-flags	:= $(XSPRESS3_LDFLAGS) $(LDFLAGS)
xspress3-deps	:= $(XSPRESS3_LDLIBS) $(LDLIBS) 

$(call lib-full,$(xspress3-name),$(xspress3-ver)): $(xspress3-objs)
	$(call compile-lib,$(xspress3-name),$(xspress3-ver),\
			   $(xspress3-flags),$(xspress3-deps),$@,$+)
	$(call create-links,$(xspress3-name),$(xspress3-ver))

build_targets	+= $(call lib-full,$(xspress3-name),$(xspress3-ver))

endif

############################
# LIMA - ULTRA
############################

ifneq ($(COMPILE_ULTRA),0)

PROCESSOR_TYPE := $(shell uname -m)
#ifeq ($(PROCESSOR_TYPE),x86_64)
#ULTRA_LDFLAGS	:= -L../camera/ultra/sdk/libs/linux.x86_64
#ULTRA_LDFLAGS	:= 
#else
#ULTRA_LDFLAGS	:= -L../camera/ultra/sdk/libs/linux.x86_64
ULTRA_LDFLAGS	:= 
#endif
#ULTRA_LDLIBS	:= -lultra -limg_mod
ULTRA_LDLIBS	:= 

ultra-name	:= ultra
ultra-objs	:= ../camera/ultra/src/Ultra.o
ultra-ver	:= ../camera/ultra/VERSION
ultra-flags	:= $(ULTRA_LDFLAGS) $(LDFLAGS)
ultra-deps	:= $(ULTRA_LDLIBS) $(LDLIBS) 

$(call lib-full,$(ultra-name),$(ultra-ver)): $(ultra-objs)
	$(call compile-lib,$(ultra-name),$(ultra-ver),\
			   $(ultra-flags),$(ultra-deps),$@,$+)
	$(call create-links,$(ultra-name),$(ultra-ver))

build_targets	+= $(call lib-full,$(ultra-name),$(ultra-ver))

endif

############################
# LIMA - XPAD
############################

ifneq ($(COMPILE_XPAD),0)

XPAD_LDLIBS	:= $(LDLIBS) -L/home/xpix_user/PCI_VALIDATED/trunk/sw/xpci_lib \
		   -lxpci_lib -L../third-party/yat/lib/i386/static -lyat

xpad-name	:= xpad
xpad-objs	:= ../camera/xpad/src/Xpad.o
xpad-ver	:= ../camera/xpad/VERSION
xpad-flags	:= $(LDFLAGS)
xpad-deps	:= $(XPAD_LDLIBS)

$(call lib-full,$(xpad-name),$(xpad-ver)): $(xpad-objs)
	$(call compile-lib,$(xpad-name),$(xpad-ver),\
			   $(xpad-flags),$(xpad-deps),$@,$+)
	$(call create-links,$(xpad-name),$(xpad-ver))

build_targets	+= $(call lib-full,$(xpad-name),$(xpad-ver))

endif

############################
# LIMA - PILATUS
############################

ifneq ($(COMPILE_PILATUS),0)

PILATUS_LDLIBS	:= 

pilatus-name	:= pilatus
pilatus-objs	:= ../camera/pilatus/src/Pilatus.o
pilatus-ver	:= ../camera/pilatus/VERSION
pilatus-flags	:= $(LDFLAGS)
pilatus-deps	:= $(PILATUS_LDLIBS)

$(call lib-full,$(pilatus-name),$(pilatus-ver)): $(pilatus-objs)
	$(call compile-lib,$(pilatus-name),$(pilatus-ver),\
			   $(pilatus-flags),$(pilatus-deps),$@,$+)
	$(call create-links,$(pilatus-name),$(pilatus-ver))

build_targets	+= $(call lib-full,$(pilatus-name),$(pilatus-ver))

endif

############################
# LIMA - POINTGREY
############################
ifneq ($(COMPILE_POINTGREY),0)

POINTGREY_LDFLAGS	:= $(LDFLAGS) -L../camera/pointgrey/sdk/lib
POINTGREY_LDLIBS	:= $(LDLIBS) -lflycapture

pointgrey-name	:= pointgrey
pointgrey-objs	:= ../camera/pointgrey/src/PointGrey.o
pointgrey-ver	:= ../camera/pointgrey/VERSION
pointgrey-flags	:= $(POINTGREY_LDFLAGS)
pointgrey-deps	:= $(POINTGREY_LDLIBS)

$(call lib-full,$(pointgrey-name),$(pointgrey-ver)): $(pointgrey-objs)
	$(call compile-lib,$(pointgrey-name),$(pointgrey-ver),\
			   $(pointgrey-flags),$(pointgrey-deps),$@,$+)
	$(call create-links,$(pointgrey-name),$(pointgrey-ver))

build_targets	+= $(call lib-full,$(pointgrey-name),$(pointgrey-ver))

endif

############################
# LIMA - IMXPAD
############################
ifneq ($(COMPILE_IMXPAD),0)

IMXPAD_LDFLAGS	:= $(LDFLAGS)
IMXPAD_LDLIBS	:= $(LDLIBS)

imxpad-name	:= imxpad
imxpad-objs	:= ../camera/imxpad/src/imXpad.o
imxpad-ver	:= ../camera/imxpad/VERSION
imxpad-flags	:= $(IMXPAD_LDFLAGS)
imxpad-deps	:= $(IMXPAD_LDLIBS)

$(call lib-full,$(imxpad-name),$(imxpad-ver)): $(imxpad-objs)
	$(call compile-lib,$(imxpad-name),$(imxpad-ver),\
			   $(imxpad-flags),$(imxpad-deps),$@,$+)
	$(call create-links,$(imxpad-name),$(imxpad-ver))

build_targets	+= $(call lib-full,$(imxpad-name),$(imxpad-ver))

endif

############################
# LIMA - RAYONIXHS
############################
ifneq ($(COMPILE_RAYONIXHS),0)

#RAYONIXHS_LDFLAGS	:= $(LDFLAGS) -L../camera/rayonixhs/sdk/lib64
RAYONIXHS_LDFLAGS	:= $(LDFLAGS) -L/opt/rayonix/lib64
RAYONIXHS_LDLIBS	:= $(LDLIBS) -lcraydl

rayonixhs-name	:= rayonixhs
rayonixhs-objs	:= ../camera/rayonixhs/src/RayonixHs.o
rayonixhs-ver	:= ../camera/rayonixhs/VERSION
rayonixhs-flags	:= $(RAYONIXHS_LDFLAGS)
rayonixhs-deps	:= $(RAYONIXHS_LDLIBS)

$(call lib-full,$(rayonixhs-name),$(rayonixhs-ver)): $(rayonixhs-objs)
	$(call compile-lib,$(rayonixhs-name),$(rayonixhs-ver),\
			   $(rayonixhs-flags),$(rayonixhs-deps),$@,$+)
	$(call create-links,$(rayonixhs-name),$(rayonixhs-ver))

build_targets	+= $(call lib-full,$(rayonixhs-name),$(rayonixhs-ver))

endif
############################
# LIMA - AVIEX
############################
ifneq ($(COMPILE_AVIEX),0)

AVIEX_LDFLAGS	:= $(LDFLAGS) -L../camera/aviex/sdk/linux/lib
AVIEX_LDLIBS	:= $(LDLIBS) -lMx

aviex-name	:= aviex
aviex-objs	:= ../camera/aviex/src/Aviex.o
aviex-ver	:= ../camera/aviex/VERSION
aviex-flags	:= $(AVIEX_LDFLAGS)
aviex-deps	:= $(AVIEX_LDLIBS)

$(call lib-full,$(aviex-name),$(aviex-ver)): $(aviex-objs)
	$(call compile-lib,$(aviex-name),$(aviex-ver),\
			   $(aviex-flags),$(aviex-deps),$@,$+)
	$(call create-links,$(aviex-name),$(aviex-ver))

build_targets	+= $(call lib-full,$(aviex-name),$(aviex-ver))

endif

############################
# LIMA - META
############################
ifneq ($(COMPILE_META),0)

META_LDFLAGS	:= $(LDFLAGS)
META_LDLIBS	:= $(LDLIBS)

meta-name	:= meta
meta-objs	:= ../camera/common/meta/src/Meta.o
meta-ver	:= ../camera/common/meta/VERSION
meta-flags	:= $(META_LDFLAGS)
meta-deps	:= $(META_LDLIBS)

$(call lib-full,$(meta-name),$(meta-ver)): $(meta-objs)
	$(call compile-lib,$(meta-name),$(meta-ver),\
			   $(meta-flags),$(meta-deps),$@,$+)
	$(call create-links,$(meta-name),$(meta-ver))

build_targets	+= $(call lib-full,$(meta-name),$(meta-ver))
endif

############################
# LIMA - V4l2
############################
ifneq ($(COMPILE_V4l2),0)

V4l2_LDFLAGS	:= $(LDFLAGS)
V4l2_LDLIBS	:= $(LDLIBS) -lv4l2

v4l2-name	:= v4l2
v4l2-objs	:= ../camera/v4l2/src/V4L2.o
v4l2-ver	:= ../camera/v4l2/VERSION
v4l2-flags	:= $(V4l2_LDFLAGS)
v4l2-deps	:= $(V4l2_LDLIBS)

$(call lib-full,$(v4l2-name),$(v4l2-ver)): $(v4l2-objs)
	$(call compile-lib,$(v4l2-name),$(v4l2-ver),\
			   $(v4l2-flags),$(v4l2-deps),$@,$+)
	$(call create-links,$(v4l2-name),$(v4l2-ver))

build_targets	+= $(call lib-full,$(v4l2-name),$(v4l2-ver))
endif

############################
# LIMA - EIGER
############################
ifneq ($(COMPILE_EIGER),0)

EIGER_LDFLAGS	:= $(LDFLAGS) 
EIGER_LDLIBS	:= $(LDLIBS) -ljsoncpp -lcurl -llz4 -lzmq

eiger-name	:= eiger
eiger-objs	:= ../camera/eiger/src/Eiger.o
eiger-ver	:= ../camera/eiger/VERSION
eiger-flags	:= $(EIGER_LDFLAGS)
eiger-deps	:= $(EIGER_LDLIBS)

$(call lib-full,$(eiger-name),$(eiger-ver)): $(eiger-objs)
	$(call compile-lib,$(eiger-name),$(eiger-ver),\
			   $(eiger-flags),$(eiger-deps),$@,$+)
	$(call create-links,$(eiger-name),$(eiger-ver))

build_targets	+= $(call lib-full,$(eiger-name),$(eiger-ver))

endif

############################
# LIMA - DEXELA
############################
ifneq ($(COMPILE_DEXELA),0)

DEXELA_LDFLAGS	:= $(LDFLAGS) 
DEXELA_LDLIBS	:= $(LDLIBS) -ldexela

dexela-name	:= dexela
dexela-objs	:= ../camera/dexela/src/Dexela.o
dexela-ver	:= ../camera/dexela/VERSION
dexela-flags	:= $(DEXELA_LDFLAGS)
dexela-deps	:= $(DEXELA_LDLIBS)

$(call lib-full,$(dexela-name),$(dexela-ver)): $(dexela-objs)
	$(call compile-lib,$(dexela-name),$(dexela-ver),\
			   $(dexela-flags),$(dexela-deps),$@,$+)
	$(call create-links,$(dexela-name),$(dexela-ver))

build_targets	+= $(call lib-full,$(dexela-name),$(dexela-ver))

endif



###########################
# LIMA - PIXIRAD
############################
ifneq ($(COMPILE_PIXIRAD),0)

PIXIRAD_LDFLAGS  := $(LDFLAGS)
PIXIRAD_LDLIBS   := $(LDLIBS)

pixirad-name     := pixirad
pixirad-objs     := ../camera/pixirad/src/Pixirad.o
pixirad-ver      := ../camera/pixirad/VERSION
pixirad-flags    := $(PIXIRAD_LDFLAGS)
pixirad-deps     := $(PIXIRAD_LDLIBS)

$(call lib-full,$(pixirad-name),$(pixirad-ver)): $(pixirad-objs)
	$(call compile-lib,$(pixirad-name),$(pixirad-ver),\
	$(pixirad-flags),$(pixirad-deps),$@,$+)
	$(call create-links,$(pixirad-name),$(pixirad-ver))

build_targets   += $(call lib-full,$(pixirad-name),$(pixirad-ver))

endif

############################
# LIMA - HEXITEC
############################

ifneq ($(COMPILE_HEXITEC),0)

HEXITEC_LDFLAGS	:= $(LDFLAGS) -L/opt/pleora/ebus_sdk/CentOS-RHEL-7-x86_64/lib
HEXITEC_LDLIBS	:= $(LDLIBS) -lPvDevice -lPvStream -lPvBuffer -lPvGenICam -lPvBase -lPvSerial -lEbUtilsLib


hexitec-name	:= hexitec
hexitec-objs	:= ../camera/hexitec/src/Hexitec.o
hexitec-ver		:= ../camera/hexitec/VERSION
hexitec-flags	:= $(HEXITEC_LDFLAGS)
hexitec-deps	:= $(HEXITEC_LDLIBS)

$(call lib-full,$(hexitec-name),$(hexitec-ver)): $(hexitec-objs)
	$(call compile-lib,$(hexitec-name),$(hexitec-ver),$(hexitec-flags),$(hexitec-deps),$@,$+)
	$(call create-links,$(hexitec-name),$(hexitec-ver))

build_targets	+= $(call lib-full,$(hexitec-name),$(hexitec-ver))
endif

src:		$(build_targets)

test:
	@true

clean:
	rm -f *.o liblima*.so*
